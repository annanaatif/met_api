name: Build and Deploy Code

on: [push, pull_request]

jobs:
  job1:
    environment:
        name: testing
    env:
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        DJANGO_SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
    
    services:
        postgres:
            image: postgres
            env:
                POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
                POSTGRES_DB: ${{ secrets.POSTGRES_DB }}_test
            ports:
                - 5432:5432
            options: >-
              --health-cmd pg_isready 
              --health-interval 10s 
              --health-timeout 5s 
              --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v4
      
      - name: Install python version 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: update pip
        run: python -m pip install --upgrade pip
      
      - name: install all dependencies
        run: pip install -r requirements.txt

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Verify Docker login
        run: echo "Logged in as $(docker info --format '{{.RegistryConfig.IndexConfigs.docker.io.Username}}')"
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/metweather:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}